//Copyright 2016 Ayogo Health Inc.

//////// GRID variables. no touchey ////////

// the grid itself resides in containers.less

// Specify the number of columns and set column and gutter widths
@columns: 12;
@column-width: 60;
@gutter-width: 20;

// Remove the definition below for a pixel-based layout
@total-width: 100%;

// Utility variable â€” you should never need to modify this
@gridsystem-width: (@column-width*@columns) + (@gutter-width*@columns) * 1px;


// GRID mixins

.row(@columns:@columns) {
  display: block;
  width: @total-width*((@gutter-width + @gridsystem-width)/@gridsystem-width);
  margin: 0 @total-width*(((@gutter-width*.5)/@gridsystem-width)*-1);
  // *width: @total-width*((@gutter-width + @gridsystem-width)/@gridsystem-width)-@correction;
  // *margin: 0 @total-width*(((@gutter-width*.5)/@gridsystem-width)*-1)-@correction;
  .clearfix;
}

.column(@x,@columns:@columns) {
  display: inline;
  float: left;
  position: relative;
  width: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
  // for now
  //margin: 0 @total-width*((@gutter-width*.5)/@gridsystem-width);
  // *width: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width)-@correction;
  // *margin: 0 @total-width*((@gutter-width*.5)/@gridsystem-width)-@correction;
}

// keep these. they work.
.push(@offset:1) {
  margin-left: @total-width*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width*((@gutter-width*.5)/@gridsystem-width);
}
.pull(@offset:1) {
  margin-right: @total-width*(((@gutter-width+@column-width)*@offset) / @gridsystem-width) + @total-width*((@gutter-width*.5)/@gridsystem-width);
}

// for dynamically getting rid of margins
.alpha {  margin-left: 0; }
.omega { margin-right: 0;}
